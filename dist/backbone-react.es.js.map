{"version":3,"file":"backbone-react.es.js","sources":["../src/utils.ts","../src/backbone-view.tsx","../src/react-view.tsx","../src/use-model.ts"],"sourcesContent":["export function pick<TObject, TKey extends keyof TObject>(\n  object: TObject,\n  keys: TKey[]\n): Pick<TObject, TKey> {\n  const picked: Partial<TObject> = {};\n  for (const key of Object.keys(object)) {\n    if (keys.includes(key as TKey)) {\n      (picked as any)[key] = (object as any)[key];\n    }\n  }\n\n  return picked as Pick<TObject, TKey>;\n}\n\nexport function isFunction(value: any): boolean {\n  return (\n    !!value && Object.prototype.toString.call(value) === '[object Function]'\n  );\n}\n","import React, {\n  memo,\n  forwardRef,\n  useRef,\n  useEffect,\n  Ref,\n  RefObject\n} from 'react';\nimport * as Backbone from 'backbone';\nimport { isFunction } from './utils';\n\ntype RefFunction<TValue> = (value: TValue | null) => void;\n\n// TODO Better typing here\ntype Component = any;\n\nexport interface Props {\n  View: typeof Backbone.View;\n  options?: object;\n  as?: string | Component;\n  instance?: Ref<Backbone.View>;\n}\n\nexport default memo(\n  forwardRef(function BackboneView(props: Props, ref: Ref<any>) {\n    const {\n      View,\n      options = {},\n      as: Component = 'div',\n      instance: instanceRef,\n      ...passthrough\n    } = props;\n    const container = useRef<null | HTMLElement>(null);\n\n    // For mount:, create instance, append, and then render\n    // (render after appending to avoid issues with views that expect to be in the DOM)\n    //\n    // For update: not used here due to React.memo that doesn't change\n    //\n    // For unmount: remove the instance to allow for cleanup\n    useEffect(() => {\n      const instance = new View(options);\n\n      container.current!.appendChild(instance.el);\n      instance.render();\n\n      setRef(instanceRef, instance);\n\n      return () => {\n        instance.remove();\n      };\n    }, [container]);\n\n    return <Component {...passthrough} ref={ref} />;\n  }),\n\n  // The only way to interact with the Backbone view is imperatively via instance\n  alwaysEqual\n);\n\nfunction setRef<TValue>(ref: Ref<TValue> | undefined, value: TValue | null) {\n  if (!ref) return;\n\n  if (isFunction(ref)) {\n    (ref as RefFunction<TValue>)(value);\n  } else {\n    // @ts-ignore Cannot assign to 'current' because it is a read-only property\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065\n    (ref as RefObject<TValue>).current = value;\n  }\n}\n\nfunction alwaysEqual() {\n  return true;\n}\n","import * as Backbone from 'backbone';\nimport * as React from 'react';\nimport { render } from 'react-dom';\n\nexport default class ReactView extends Backbone.View<Backbone.Model> {\n  Component: any;\n  props: object;\n\n  constructor(Component: any, props: object = {}, options: object = {}) {\n    super(options);\n\n    this.Component = Component;\n    this.props = props;\n  }\n\n  render() {\n    const { Component, props, el } = this;\n    render(<Component {...props} />, el);\n\n    return this;\n  }\n}\n","import * as Backbone from 'backbone';\nimport * as React from 'react';\nimport { pick } from './utils';\n\nexport default function useModel(model: Backbone.Model, keys?: string[]): any {\n  const select = () => {\n    return { ...(keys ? pick(model.attributes, keys) : model.attributes) };\n  };\n\n  const [attributes, setAttributes] = React.useState(select());\n  const event = keys ? keys.map(key => `change:${key}`).join(' ') : 'change';\n\n  React.useEffect(() => {\n    const onChange = () => {\n      setAttributes(select());\n    };\n    model.on(event, onChange);\n\n    return () => {\n      model.off(event, onChange);\n    };\n  }, [model]);\n\n  return attributes;\n}\n"],"names":["React","Backbone.View","React.createElement","React.useState","React.useEffect"],"mappings":"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"}